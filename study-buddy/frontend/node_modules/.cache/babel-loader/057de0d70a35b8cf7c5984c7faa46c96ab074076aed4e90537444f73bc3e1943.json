{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import{getProfile}from'../services/api';import{useSelector}from'react-redux';import'./Dashboard.css';// Import your CSS styles\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Dashboard(){const[userInfo,setUserInfo]=useState(null);const[recentActivities,setRecentActivities]=useState([]);const[notifications,setNotifications]=useState([]);const[statistics,setStatistics]=useState({studyGroups:0,completedTasks:0});const navigate=useNavigate();const isAuthenticated=useSelector(state=>state.user.isAuthenticated);useEffect(()=>{if(!isAuthenticated){navigate('/login');}else{fetchUserProfile();fetchRecentActivities();fetchNotifications();fetchStatistics();}},[isAuthenticated,navigate]);const fetchUserProfile=async()=>{try{const token=localStorage.getItem('token');const response=await getProfile(token);setUserInfo(response.data);}catch(error){console.error('Error fetching user profile:',error);}};const fetchRecentActivities=async()=>{// Mock fetching recent activities\nsetRecentActivities(['Joined the React Study Group','Completed the JavaScript Challenge','Posted a question in the forum']);};const fetchNotifications=async()=>{// Mock fetching notifications\nsetNotifications(['New comments on your post','You have a new message from Alex','Study Group meeting scheduled for tomorrow at 6 PM']);};const fetchStatistics=async()=>{// Mock fetching user statistics\nsetStatistics({studyGroups:5,completedTasks:12});};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(\"h2\",{children:/*#__PURE__*/_jsx(\"center\",{children:\"Dashboard\"})}),userInfo?/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Welcome, \",userInfo.username,\"!\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Email: \",userInfo.email]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Study Groups Joined: \",statistics.studyGroups]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Completed Tasks: \",statistics.completedTasks]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/study-group'),children:\"View Study Groups\"})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading user information...\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"recent-activities\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Recent Activities\"}),/*#__PURE__*/_jsx(\"ul\",{children:recentActivities.length>0?recentActivities.map((activity,index)=>/*#__PURE__*/_jsx(\"li\",{children:activity},index)):/*#__PURE__*/_jsx(\"li\",{children:\"No recent activities.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"notifications\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Notifications\"}),/*#__PURE__*/_jsx(\"ul\",{children:notifications.length>0?notifications.map((notification,index)=>/*#__PURE__*/_jsx(\"li\",{children:notification},index)):/*#__PURE__*/_jsx(\"li\",{children:\"No new notifications.\"})})]})]});}export default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","getProfile","useSelector","jsx","_jsx","jsxs","_jsxs","Dashboard","userInfo","setUserInfo","recentActivities","setRecentActivities","notifications","setNotifications","statistics","setStatistics","studyGroups","completedTasks","navigate","isAuthenticated","state","user","fetchUserProfile","fetchRecentActivities","fetchNotifications","fetchStatistics","token","localStorage","getItem","response","data","error","console","className","children","username","email","onClick","length","map","activity","index","notification"],"sources":["/home/chemelil/study-buddy/study-buddy/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getProfile } from '../services/api';\nimport { useSelector } from 'react-redux';\nimport './Dashboard.css'; // Import your CSS styles\n\nfunction Dashboard() {\n  const [userInfo, setUserInfo] = useState(null);\n  const [recentActivities, setRecentActivities] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n  const [statistics, setStatistics] = useState({ studyGroups: 0, completedTasks: 0 });\n  const navigate = useNavigate();\n  const isAuthenticated = useSelector((state) => state.user.isAuthenticated);\n\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate('/login');\n    } else {\n      fetchUserProfile();\n      fetchRecentActivities();\n      fetchNotifications();\n      fetchStatistics();\n    }\n  }, [isAuthenticated, navigate]);\n\n  const fetchUserProfile = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await getProfile(token);\n      setUserInfo(response.data);\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n    }\n  };\n\n  const fetchRecentActivities = async () => {\n    // Mock fetching recent activities\n    setRecentActivities([\n      'Joined the React Study Group',\n      'Completed the JavaScript Challenge',\n      'Posted a question in the forum',\n    ]);\n  };\n\n  const fetchNotifications = async () => {\n    // Mock fetching notifications\n    setNotifications([\n      'New comments on your post',\n      'You have a new message from Alex',\n      'Study Group meeting scheduled for tomorrow at 6 PM',\n    ]);\n  };\n\n  const fetchStatistics = async () => {\n    // Mock fetching user statistics\n    setStatistics({ studyGroups: 5, completedTasks: 12 });\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <h2><center>Dashboard</center></h2>\n      {userInfo ? (\n        <div className=\"user-info\">\n          <h3>Welcome, {userInfo.username}!</h3>\n          <p>Email: {userInfo.email}</p>\n          <p>Study Groups Joined: {statistics.studyGroups}</p>\n          <p>Completed Tasks: {statistics.completedTasks}</p>\n          <button onClick={() => navigate('/study-group')}>View Study Groups</button>\n        </div>\n      ) : (\n        <p>Loading user information...</p>\n      )}\n\n      <div className=\"recent-activities\">\n        <h3>Recent Activities</h3>\n        <ul>\n          {recentActivities.length > 0 ? (\n            recentActivities.map((activity, index) => (\n              <li key={index}>{activity}</li>\n            ))\n          ) : (\n            <li>No recent activities.</li>\n          )}\n        </ul>\n      </div>\n\n      <div className=\"notifications\">\n        <h3>Notifications</h3>\n        <ul>\n          {notifications.length > 0 ? (\n            notifications.map((notification, index) => (\n              <li key={index}>{notification}</li>\n            ))\n          ) : (\n            <li>No new notifications.</li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}